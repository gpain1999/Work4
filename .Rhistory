fit1 <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
fit5_bis <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
summary(fit5_bis)
anova(fit5_bis,fit2_bis)
anova(fit5_bis,fit3_bis)
#repartition %
round(prop.table(with(nels, table(region, useNA = "ifany")))*100,2)
### Contingency table
(tab2 <- with(nels, table(ses, fa.educ,region)))
(ptab2 <- round(prop.table(tab2, margin = 2) * 100, 1))
### Data frame for loglinear modelling
(qq2 <- as.data.frame(tab2, responseName = "N"))
View(qq2)
fitp2.1 <- glm(N ~ ses + fa.educ + region, family = poisson, data = qq2)
fitp2.2 <- glm(N ~ (ses:fa.educ)+(ses:region)+(fa.educ:region), family = poisson, data = qq2)
fitp2.3 <- glm(N ~ (ses:fa.educ:region), family = poisson, data = qq2)
summary(fitp2.1)
summary(fitp2.2)
summary(fitp2.3)
View(qq1)
regm3 <- multinom(ses ~ fa.educ +region+fa.wrk ,family=poisson, data = nels)
summary(regm3)
odds.ratio(regm3)
ggcoef_multinom(
regm3,
exponentiate = TRUE
)
install.packages('GGally')
#
library("colorspace")
library("xtable")
library(MASS)
library(questionr)
library(nnet)
library(broom.helpers)
print(load("AdvRegr_4_nels.RData"))
#repartition %
round(prop.table(with(nels, table(fa.educ, useNA = "ifany")))*100,2)
### Contingency table
(tab1 <- with(nels, table(ses, fa.educ)))
(ptab1 <- round(prop.table(tab1, margin = 2) * 100, 1))
### Data frame for loglinear modelling
(qq1 <- as.data.frame(tab1, responseName = "N"))
#
#setwd("C:/Users/guill/OneDrive/Documents/Charles_University/Advanced Regression Models/Work4")
rm(list=ls())
print(load("AdvRegr_4_nels.RData"))
#repartition %
round(prop.table(with(nels, table(fa.educ, useNA = "ifany")))*100,2)
### Contingency table
(tab1 <- with(nels, table(ses, fa.educ)))
(ptab1 <- round(prop.table(tab1, margin = 2) * 100, 1))
### Data frame for loglinear modelling
fit1 <- glm(ses~fa.educ, family = poisson, data = nels)
summary(fit1)
View(nels)
#First observation :
#Elementary -> more 1 & 2
#High -> More 2 & 3
#College -> More 4
sum(is.na(nels$fa.educ))
#First observation :
#Elementary -> more 1 & 2
#High -> More 2 & 3
#College -> More 4
sum(is.na(nels$ses))
is.na(nels$ses)
### Data frame for loglinear modelling
fit1 <- glm(ses~fa.educ, family = poisson, data = nels)
summary(fit1)
(qq1 <- as.data.frame(tab1, responseName = "N"))
fit1 <- glm(N ~ ses + fa.educ + ses:fa.educ, family = poisson, data = qq1)
summary(fit1)
### Data frame for loglinear modelling
fit1 <- glm(ses~fa.educ, family = poisson, data = nels)
fit2 = glm(ses~fa.educ+region, family = poisson, data=nels)
regm3 <- multinom(ses ~ fa.educ +region+fa.wrk ,family=poisson, data = nels)
#
library("colorspace")
library("xtable")
#
rm(list=ls())
print(load("AdvRegr_4_nels.RData"))
### Marginal frequencies
with(nels, table(ses,     useNA = "ifany"))
with(nels, table(sesmed,  useNA = "ifany"))
with(nels, table(parents, useNA = "ifany"))
with(nels, table(foreign, useNA = "ifany"))
with(nels, table(fa.educ, useNA = "ifany"))
with(nels, table(mo.educ, useNA = "ifany"))
with(nels, table(region,  useNA = "ifany"))
with(nels, table(fa.wrk,  useNA = "ifany"))
with(nels, table(mo.wrk,  useNA = "ifany"))
### Contingency table
(xtab1 <- with(nels, table(ses, fa.educ)))
### Exploration: column proportions
prop.table(xtab1, margin = 2)
### Formatted numbers
(ptab1 <- round(prop.table(xtab1, margin = 2) * 100, 1))
### Table in LaTeX
print(xtable(ptab1, digits = c(0, 1, 1, 1)), floating = FALSE)
### Plot (two slightly different versions)
par(mfrow = c(1, 2), mar = c(3, 3, 3, 1) + 0.1)
plot(t(xtab1), col = rainbow_hcl(4), main = "SES by father's education")
plot(ses ~ fa.educ, data = nels, col = rainbow_hcl(4),
main = "SES by father's education")
par(mfrow = c(1, 1))
### Chi^2 test
chisq.test(xtab1)
### Data frame for loglinear modelling
(qq1 <- as.data.frame(xtab1, responseName = "N"))
### Saturated model
fit1 <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
fit1 <- glm(N ~ ses + fa.educ + ses:fa.educ, family = poisson, data = qq1)
## the same as above
summary(fit1)         ### Surprised by (numerically) zero residual deviance?
### Independence model
fit0 <- glm(N ~ ses + fa.educ, family = poisson, data = qq1)
summary(fit0)
### Deviance (likelihood-ratio) test of independence
anova(fit0, fit1, test = "LRT")
fit1 <- glm(N ~ ses + fa.educ + ses:fa.educ, family = poisson, data = qq1)
## the same as above
summary(fit1)         ### Surprised by (numerically) zero residual deviance?
### Independence model
fit0 <- glm(N ~ ses + fa.educ, family = poisson, data = qq1)
summary(fit0)
### Deviance (likelihood-ratio) test of independence
anova(fit0, fit1, test = "LRT")
### Score test of independence
chisq.test(xtab1)
### Yes, the classical chi-sq test of independence
### is the score test in the corresponding loglinear model
anova(fit0, fit1, test = "Rao")
### Also the Wald test can be considered
(be1 <- coef(fit1))
V1 <- vcov(fit1)
(interIndex <- grep(":fa.educ", names(be1)))
W <- as.numeric(be1[interIndex] %*% solve(V1[interIndex, interIndex], be1[interIndex]))
pW <- pchisq(W, df = length(interIndex), lower.tail = FALSE)
Wald  <- data.frame(W = W, df = length(interIndex), Pvalue = pW)
print(Wald)
### Coef interpretation
exp(coef(fit1)[-1])
round(exp(coef(fit1)[-1]), 2)    ### Meaning of each coefficient?
### Check levels of the two factors
with(nels, table(ses,     useNA = "ifany"))
with(nels, table(fa.educ, useNA = "ifany"))
contr.treatment(3)
### ODDS on better ses (compared to ses = 1)
### given father's education
### ----------------------------------------
#
### fa.educ = Elementary
be1[paste("ses", 2:4, sep = "")]
(oddsElem <- exp(be1[paste("ses", 2:4, sep = "")]))
#
### fa.educ = High
be1[paste("ses", 2:4, sep = "")]
be1[paste("ses", 2:4, ":fa.educHigh", sep = "")]
(oddsHigh <- exp(be1[paste("ses", 2:4, sep = "")] +
be1[paste("ses", 2:4, ":fa.educHigh", sep = "")]))
#
### fa.educ = College
be1[paste("ses", 2:4, sep = "")]
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]
(oddsColl <- exp(be1[paste("ses", 2:4, sep = "")] +
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]))
### All in one table
ODDSbetterSES <- data.frame(Elementary = oddsElem, High = oddsHigh,
College = oddsColl)
print(ODDSbetterSES)
### ODDS on better education (compared to fa.educ = Elementary)
### given family SES
### -----------------------------------------------------------------------
#
### ses = 1
(odds1 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")]))
#
### ses = 2
(odds2 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses2:fa.educ", c("High", "College"), sep = "")]))
#
### ses = 3
(odds3 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")]))
#
### ses = 4
(odds4 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses4:fa.educ", c("High", "College"), sep = "")]))
### All in one table
ODDShigherEduc <- data.frame(ses1 = odds1, ses2 = odds2, ses3 = odds3, ses4 = odds4)
print(ODDShigherEduc)
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing higher levels of education with Elementary one)
###
### = ODDS RATIOS (ratios of odds on higher level of education
###   compared to Elementary one)
###   when comparing higher ses with ses = 1)
###
### -----------------------------------------------------------------------------
exp(be1[grep(":fa.educ", names(be1))])
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing College education with High education)
###
### = ODDS RATIOS (ratios of odds on College education compared to High education
###   when comparing higher ses with ses = 1
### ------------------------------------------------------------------------------
exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))])
### Are fit0 and fit1 the only reasonable models in this situation?
###
### How about the model below?
### Does it have reasonable interpretation?
### ----------------------------------------------------------------------
qq1 <- transform(qq1, nses = as.numeric(ses))
print(qq1)
summary(qq1)
### Linear trend?
fit1n <- glm(N ~ (nses + fa.educ)^2, family = poisson, data = qq1)
View(qq1)
summary(fit1n)
be1n <- coef(fit1n)
### Odds on better ses (by 1)
### ----------------------------------------
#
### fa.educ = Elementary
exp(be1n["nses"])
#
(oddsnElem <- exp(be1n["nses"] * 1:3))  ## trend
exp(be1[paste("ses", 2:4, sep = "")])   ## saturated
#
### fa.educ = High
exp(be1n["nses"] + be1n["nses:fa.educHigh"])
#
(oddsnHigh <- exp((be1n["nses"] + be1n["nses:fa.educHigh"]) * 1:3))  ## trend
exp(be1[paste("ses", 2:4, sep = "")] +                           ## saturated
be1[paste("ses", 2:4, ":fa.educHigh", sep = "")])
#
### fa.educ = College
exp(be1n["nses"] + be1n["nses:fa.educCollege"])
#
(oddsnColl <- exp((be1n["nses"] + be1n["nses:fa.educCollege"]) * 1:3)) ## trend
exp(be1[paste("ses", 2:4, sep = "")] +                             ## saturated
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")])
### All in one table
ODDSnbetterSES <- data.frame(Elementary = oddsnElem, High = oddsnHigh,
College = oddsnColl)
#
### Compare
print(ODDSnbetterSES)          ## SES ordinal (numeric)
print(ODDSbetterSES)           ## SES nominal
### Is (saturated) fit1 significantly better than fit1n?
### -------------------------------------------------------
anova(fit1n, fit1, test = "LRT")
### Odds on better education (compared to fa.educ = Elementary)
### -----------------------------------------------------------------------
#
### ses = 1
(oddsn1 <- exp(be1n[paste("fa.educ", c("High", "College"), sep = "")] +
be1n[paste("nses:fa.educ", c("High", "College"), sep = "")]))
#
exp(be1[paste("fa.educ", c("High", "College"), sep = "")])   ## Compare (saturated)
#
### ses = 2
(oddsn2 <- exp(be1n[paste("fa.educ", c("High", "College"), sep = "")] +
2 * be1n[paste("nses:fa.educ", c("High", "College"), sep = "")]))
#
exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses2:fa.educ", c("High", "College"), sep = "")])
#
### ses = 3
(oddsn3 <- exp(be1n[paste("fa.educ", c("High", "College"), sep = "")] +
3 * be1n[paste("nses:fa.educ", c("High", "College"), sep = "")]))
#
exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")])
#
### ses = 4
(oddsn4 <- exp(be1n[paste("fa.educ", c("High", "College"), sep = "")] +
4 * be1n[paste("nses:fa.educ", c("High", "College"), sep = "")]))
#
exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses4:fa.educ", c("High", "College"), sep = "")])
### All in one table
ODDSnhigherEduc <- data.frame(ses1 = oddsn1, ses2 = oddsn2, ses3 = oddsn3,
ses4 = oddsn4)
#
### Compare
print(ODDSnhigherEduc)          ## SES ordinal (numeric)
print(ODDShigherEduc)           ## SES nominal
##### (Useful?) function to calculate
##### a goodness-of-fit test
##### - perhaps useful for multi-dimensional tables
##### ==============================================
gof <- function(m){
DD <- deviance(m)
df <- m$df.residual
pval <- pchisq(DD, df, lower.tail = FALSE)
nparm <- length(coef(m))
LowCount <- sum(fitted(m) <= 5)
cat("Goodness-of-fit test, model with ", nparm, " parameters\n", sep = "")
cat("Deviance = ", DD, ", df = ", df, "\n", sep = "")
cat("P-value: ", ifelse(pval < 0.001, "<0.001", format(round(pval, 3), nsmall = 3)), "\n\n", sep = "")
if (LowCount){
cat("Number of cells with low fitted counts: ", LowCount, "\n\n")
print(summary(fitted(m)))
}
}
gof(fit1n)  ## Test of a linear trend for X again
#
gof(fit1)      ### Hmmmm...
### Do you have a better name for chi^2 distribution
### with 0 degrees of freedom?
### Correct p-value:
pchisq(0, df = 0, lower.tail = FALSE)
#
gof(fit0)    ## Test of independence again
#
gof(fit0)    ## Test of independence again
#repartition %
round(prop.table(with(nels, table(fa.educ, useNA = "ifany")))*100,2)
### Contingency table
(tab1 <- with(nels, table(ses, fa.educ)))
(ptab1 <- round(prop.table(tab1, margin = 2) * 100, 1))
#First observation :
#Elementary -> more 1 & 2
#High -> More 2 & 3
#College -> More 4
sum(is.na(nels$ses))
### Initial operations
### ++++++++++++++++++++++++++++++++++++++++++++
#setwd("/home/komarek/teach/mff_2020/nmst432_AdvRegr/Problem_4/")
#
library("colorspace")
library("xtable")
#
print(load("AdvRegr_4_nels.RData"))
### Table and related data.frame
(xtab2 <- with(nels, table(ses, fa.educ, region)))
qq2 <- as.data.frame(xtab2, responseName = "N")
### Saturated model
fit2 <- glm(N ~ (ses + fa.educ + region)^3, family = poisson, data = qq2)
summary(fit2)
### Deviance test on the three-way interaction
drop1(fit2, test = "LRT")
### Coefficients
(be2 <- coef(fit2))
pv2 <- summary(fit2)$coefficients[, "Pr(>|z|)"]
(pv2 <- round(pv2, 3))
### Odds ratios (odds on higher ses compared to ses = 1) when comparing higher
### educations with elementary ones
### = odds ratios (odds on higher education compared to elementary one) when
###   comparing higher ses with ses = 1
### --> conditional ones (given region)
#
## Region = Northeast (reference)
## ------------------------------
(lorNE <- c(be2[grep("^ses[0-9]:fa.educHigh$",    names(be2))],
be2[grep("^ses[0-9]:fa.educCollege$", names(be2))]))
(orNE <- exp(lorNE))
(orNE <- matrix(round(orNE, 2), nrow = 3))
rownames(orNE) <- paste("ses", 2:4, sep = "")
colnames(orNE) <- paste("educ", c("High", "College"))
print(orNE)
### Three-way interactions: changes of above conditional odds ratios
### when comparing given region with Northeast (reference)
### ------------------------------------------------------------------
#
### Midwest - Northeast (reference)
### ++++++++++++++++++++++++++++++++
(orChangeMW <- exp(be2[grep("^ses[0-9]:fa.educ(College|High):regionMidwest",
names(be2))]))
(pvChangeMW <- pv2[grep("^ses[0-9]:fa.educ(College|High):regionMidwest",
names(pv2))])
### West - Northeast (reference)
### +++++++++++++++++++++++++++++++
(orChangeWE <- exp(be2[grep("^ses[0-9]:fa.educ(College|High):regionWest",
names(be2))]))
(pvChangeWE <- pv2[grep("^ses[0-9]:fa.educ(College|High):regionWest",
names(pv2))])
### Logit model (saturated)
fit3 <- glm(sesmed ~ (fa.educ + fa.wrk + region)^3, family = binomial, data = nels)
drop1(fit3, test = "LRT")
### Logit model, no three-way interaction
fit3alt <- glm(sesmed ~ (fa.educ + fa.wrk + region)^2, family = binomial, data = nels)
drop1(fit3alt, test = "LRT")
### data.frame for loglinear model
(xtab4 <- with(nels, table(sesmed, fa.educ, fa.wrk, region)))
qq4 <- as.data.frame(xtab4, responseName = "N")
##### (Useful?) function to calculate
##### a goodness-of-fit test
##### - perhaps useful for multi-dimensional tables
##### ==============================================
gof <- function(m){
DD <- deviance(m)
df <- m$df.residual
pval <- pchisq(DD, df, lower.tail = FALSE)
nparm <- length(coef(m))
LowCount <- sum(fitted(m) <= 5)
cat("Goodness-of-fit test, model with ", nparm, " parameters\n", sep = "")
cat("Deviance = ", DD, ", df = ", df, "\n", sep = "")
cat("P-value: ", ifelse(pval < 0.001, "<0.001", format(round(pval, 3), nsmall = 3)), "\n\n", sep = "")
if (LowCount){
cat("Number of cells with low fitted counts: ", LowCount, "\n\n")
print(summary(fitted(m)))
}
}
### Table
xtab5 <- with(nels, table(sesmed, parents, foreign, fa.educ, mo.educ, region,
fa.wrk, mo.wrk))
dim(xtab5)
prod(dim(xtab5))       ## 1152
### Marginal counts
### Some exploration (do we have at least marginally reasonable counts?)
margin.table(xtab5, margin = 1)
margin.table(xtab5, margin = 2)
margin.table(xtab5, margin = 3)
margin.table(xtab5, margin = 4)
margin.table(xtab5, margin = 5)
margin.table(xtab5, margin = 6)
margin.table(xtab5, margin = 7)
margin.table(xtab5, margin = 8)
### Some pairwise dependencies
with(nels, table(fa.wrk, mo.wrk))
prop.table(with(nels, table(fa.wrk, mo.wrk)), margin = 2)
chisq.test(with(nels, table(fa.wrk, mo.wrk)))
#
with(nels, table(fa.educ, mo.educ))
prop.table(with(nels, table(fa.educ, mo.educ)), margin = 2)
chisq.test(with(nels, table(fa.educ, mo.educ)))
#
with(nels, table(mo.wrk, mo.educ))
prop.table(with(nels, table(mo.wrk, mo.educ)), margin = 2)
chisq.test(with(nels, table(mo.wrk, mo.educ)))
### Three-way interaction model
qq5 <- as.data.frame(xtab5, responseName = "N")
m1 <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^3, family = poisson, data = qq5)
gof(m1)
### Two-way interaction model
mTwoWay <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^2, family = poisson, data = qq5)
#
gof(mTwoWay)
anova(mTwoWay, m1, test = "LR")        ### Some three-way interactions needed...
### Usual model building while starting from the three-way interaction model
D1 <- drop1(m1, test = "LR")            ## takes some time, be patient...
print(D1)
### Candidates to remove in the first step
class(D1)
attr(D1, "row.names")
D1[["Pr(>Chi)"]]
(Drop1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] > 0.5])
paste(Drop1, collapse = "-")
paste(". ~ . - ", paste(Drop1, collapse = "-"))
m2 <- update(m1, paste(". ~ . - ", paste(Drop1, collapse = "-")))
gof(m2)
anova(m2, m1, test = "LRT")
### If we really want to be sure that nothing "important" has been removed,
### standard back-check can be performed (rather automatically) by adding
### each of removed terms back to the model
(Return1  <- add1(m2, scope = m1, test = "LRT"))
min(Return1[, "Pr(>Chi)"], na.rm = TRUE)
### Alternative: specify those factors which should be kept in the model
(Keep1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] < 0.2])
m3 <- update(mTwoWay, paste(". ~ . + ", paste(Keep1, collapse = "+")))
gof(m3)
anova(m3, m1, test = "LRT")
###intro###
library("colorspace")
library("xtable")
library(MASS)
library(questionr)
library(nnet)
library(broom.helpers)
#
rm(list=ls())
print(load("AdvRegr_4_nels.RData"))
###FIRST PART : ses vs fa.educ
(xtab1 <- with(nels, table(ses, fa.educ)))
plot(ses ~ fa.educ, data = nels, col = rainbow_hcl(4),
main = "SES by father's education")
chisq.test(xtab1)
(ses_fa <- with(nels, table(ses, fa.educ)))
plot(ses ~ fa.educ, data = nels, col = rainbow_hcl(4),
main = "SES by father's education")
chisq.test(ses_fa)
data_1 = as.data.frame(ses_fa, responseName = "N")
summary(data_1)
ses_fa1 = glm(N ~ (ses+fa.educ)^2, data = nels, family = poisson)
ses_fa1 = glm(N ~ (ses+fa.educ)^2, data = data_1, family = poisson)
fit_ses_fa1 = glm(N ~ (ses+fa.educ)^2, data = data_1, family = poisson)
summary(fit_ses_fa1)
fit_ses_fa2 <- glm(N~ses+fa.educ, family = poisson, data=data_1)
summary(fit_ses_fa2)
anova(fit_ses_fa1,fit_ses_fa2)
drop1(fit_ses_fa1,test="Chisq")
drop1(fit_ses_fa2,test="Chisq")
be1 = coef(fit_ses_fa1)
summary(fit_ses_fa1)
coefs1 = coef(fit_ses_fa1)
(coefs1 = coef(fit_ses_fa1))
### Elementary
(oddsElem <- exp(coefs1[paste("ses", 2:4, sep = "")]))
### fa.educ = High
(oddsHigh <- exp(coefs1[paste("ses", 2:4, sep = "")] +
coefs1[paste("ses", 2:4, ":fa.educHigh", sep = "")]))
### College
(oddsColl <- exp(coefs1[paste("ses", 2:4, sep = "")] +
coefs1[paste("ses", 2:4, ":fa.educCollege", sep = "")]))
### Elementary
(oddsElem <- exp(coefs1[paste("fa.educ", 2:4, sep = "")]))
