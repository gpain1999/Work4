summary(regm5)
step(regm5)
rbPal <- colorRampPalette(c('red','blue'))
loadings <- data.frame(food.fa$loadings[,1:2])
#install.packages(pkgs="http://www.karlin.mff.cuni.cz/~hlavka/sms2/SMSdata_1.0.tar.gz", repos=NULL, type="source")
library(SMSdata)
data(food)
library("FactoMineR")
library("factoextra")
library("qgraph")
library(corrplot)
library(tidyverse)
library(RcmdrMisc)
rcorr.adjust(food) # This function is build into R Commander.
scree(food, pc=FALSE)  # Use pc=FALSE for factor analysis
fa.food <- factanal(food, factors = 3, rotation="varimax")
print(fa.food, digits=2, cutoff=.6, sort=TRUE)
library(nFactors)
ev <- eigen(cor(food))
ap <- parallel(subject=nrow(food),var=ncol(food), rep=100, cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
load <- food.fa$loadings[,1:2]
fa.food <- factanal(food, factors = 3, rotation="varimax")
print(fa.food, digits=2, cutoff=.6, sort=TRUE)
scree(food, pc=FALSE)  # Use pc=FALSE for factor analysis
screeplot(food, pc=FALSE)  # Use pc=FALSE for factor analysis
=======
>>>>>>> 3491978b8b8b289a5b4ccd50416c38661c4c805a
>>>>>>> 4ff24b95d4859326166234936574e59fefe273e9
>>>>>>> 8fbe0825e99970f955abbcec0b09d68ce1a21822
library("colorspace")
library("xtable")
rm(list=ls())
print(load("AdvRegr_4_nels.RData"))
### Marginal frequencies - seem alright
with(nels, table(ses,     useNA = "ifany"))
with(nels, table(fa.educ, useNA = "ifany"))
### Contingency table
(xtab1 <- with(nels, table(ses, fa.educ)))
(ptab1 <- round(100*prop.table(xtab1, margin = 2), 2)) # fractions indicate large differences
### Plot for simple relation
plot(ses ~ fa.educ, data = nels, col = rainbow_hcl(4),
main = "SES by father's education")
### LaTeX-Code for table
print(xtable(ptab1, digits = c(0, 1, 1, 1)), floating = FALSE)
### Data frame for loglinear modelling
qq1 <- as.data.frame(xtab1, responseName = "N")
print(qq1)
### Saturated model
fit1 <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
summary(fit1)
### Independence model
fit0 <- glm(N ~ ses + fa.educ, family = poisson, data = qq1)
summary(fit0)
### Deviance (likelihood-ratio) test of independence
anova(fit0, fit1, test = "LRT")
(be1 <- coef(fit1))
coef_exp_1 <- round(exp(be1),2)[-1]
coef_exp_1 # exponentiated coefficients
### ODDS on better ses (compared to ses = 1)
### given father's education
### ----------------------------------------
#
### fa.educ = Elementary
be1[paste("ses", 2:4, sep = "")]
(oddsElem <- exp(be1[paste("ses", 2:4, sep = "")]))
(oddsElem <- round(exp(be1[paste("ses", 2:4, sep = "")])),2)
(oddsElem <- round(exp(be1[paste("ses", 2:4, sep = "")]),2))
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]),2)
(oddsColl <- round(exp(be1[paste("ses", 2:4, sep = "")] +
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]),2))
### All in one table
ODDSbetterSES <- data.frame(Elementary = oddsElem, High = oddsHigh,
College = oddsColl)
(oddsHigh <- round(exp(be1[paste("ses", 2:4, sep = "")] +
be1[paste("ses", 2:4, ":fa.educHigh", sep = "")]),2))
#
### fa.educ = College
be1[paste("ses", 2:4, sep = "")]
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]
(oddsColl <- round(exp(be1[paste("ses", 2:4, sep = "")] +
be1[paste("ses", 2:4, ":fa.educCollege", sep = "")]),2))
### All in one table
ODDSbetterSES <- data.frame(Elementary = oddsElem, High = oddsHigh,
College = oddsColl)
print(ODDSbetterSES)
print(xtable(ODDSbetterSES, digits = c(0, 1, 1, 1)), floating = FALSE)
### ODDS on better education (compared to fa.educ = Elementary)
### given family SES
### -----------------------------------------------------------------------
#
### ses = 1
(odds1 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")]))
#
### ses = 2
(odds2 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses2:fa.educ", c("High", "College"), sep = "")]))
#
### ses = 3
(odds3 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")]))
#
### ses = 4
(odds4 <- exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses4:fa.educ", c("High", "College"), sep = "")]))
#
### ses = 2
(odds2 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses2:fa.educ", c("High", "College"), sep = "")]),2))
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")]),2)
#
### ses = 3
(odds3 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")]),2))
#
### ses = 4
(odds4 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses4:fa.educ", c("High", "College"), sep = "")]),2))
### All in one table
ODDShigherEduc <- data.frame(ses1 = odds1, ses2 = odds2, ses3 = odds3, ses4 = odds4)
print(ODDShigherEduc)
### ODDS on better education (compared to fa.educ = Elementary)
### given family SES
### -----------------------------------------------------------------------
#
### ses = 1
(odds1 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")]),2))
#
### ses = 2
(odds2 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses2:fa.educ", c("High", "College"), sep = "")]),2))
#
### ses = 3
(odds3 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses3:fa.educ", c("High", "College"), sep = "")]),2))
#
### ses = 4
(odds4 <- round(exp(be1[paste("fa.educ", c("High", "College"), sep = "")] +
be1[paste("ses4:fa.educ", c("High", "College"), sep = "")]),2))
### All in one table
ODDShigherEduc <- data.frame(ses1 = odds1, ses2 = odds2, ses3 = odds3, ses4 = odds4)
print(ODDShigherEduc)
print(xtable(ODDShigherEduc, digits = c(0, 1, 1, 1)), floating = FALSE)
print(xtable(ODDShigherEduc, digits = c(0, 1, 1, 1,1)), floating = FALSE)
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing College education with High education)
###
### = ODDS RATIOS (ratios of odds on College education compared to High education
###   when comparing higher ses with ses = 1
exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))])
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing College education with High education)
###
### = ODDS RATIOS (ratios of odds on College education compared to High education
###   when comparing higher ses with ses = 1
round(exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))]),2))
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing College education with High education)
###
### = ODDS RATIOS (ratios of odds on College education compared to High education
###   when comparing higher ses with ses = 1
round(exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))],2))
### ODDS RATIOS (ratios of odds on higher ses compared to ses = 1
###   when comparing College education with High education)
###
### = ODDS RATIOS (ratios of odds on College education compared to High education
###   when comparing higher ses with ses = 1
round(exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))]),2)
ODDScollEduc = round(exp(be1[grep(":fa.educCollege", names(be1))] - be1[grep(":fa.educHigh", names(be1))]),2)
print(xtable(ODDScollEduc, digits = c(0, 1, 1, 1,1)), floating = FALSE)
ODDScollEduc = as.data.frame(ODDScollEduc)
print(xtable(ODDScollEduc, digits = c(0, 1, 1, 1,1)), floating = FALSE)
print(xtable(ODDScollEduc, digits = c(0, 1, 1, 1)), floating = FALSE)
print(xtable(ODDScollEduc, digits = c(0, 1, 1)), floating = FALSE)
print(xtable(ODDScollEduc, digits = c(0, 1,)), floating = FALSE)
print(xtable(ODDScollEduc, digits = c(0, 1)), floating = FALSE)
library("colorspace")
library("xtable")
rm(list=ls())
print(load("AdvRegr_4_nels.RData"))
### Basic exploration
### ++++++++++++++++++++++++++++++++++++++++++++
with(nels, table(sesmed))
with(nels, table(fa.educ))
with(nels, table(fa.wrk))
with(nels, table(region))
(xtab3 <- with(nels, table(ses, fa.educ, fa.wrk, region)))
qq3 <- as.data.frame(xtab3, responseName = "N")
### Logit model (saturated)
fit3 <- glm(sesmed ~ (fa.educ + fa.wrk + region)^3, family = binomial, data = nels)
drop1(fit3, test = "LRT")
### Logit model, no three-way interaction
fit3alt <- glm(sesmed ~ (fa.educ + fa.wrk + region)^2, family = binomial, data = nels)
drop1(fit3alt, test = "LRT") ##drop fa.wrk:region first
### Start with fit3alt and try to simplify it
### --> fit30alt
fit30alt <- glm(sesmed ~ (fa.educ + region)^2 + fa.educ:fa.wrk + fa.wrk, family = binomial, data = nels)
anova(fit3alt, fit30alt, test = "LRT") # not significantly worse
drop1(fit30alt, test = "LRT")
fit31alt <- glm(sesmed ~ (fa.educ + region)^2 + fa.wrk, family = binomial, data = nels)
anova(fit3alt, fit31alt, test = "LRT") # not significantly worse
anova(fit30alt, fit31alt, test ="LRT") # same, but on edge, so pay attention
drop1(fit31alt, test = "LRT") # no further dropping of interaction terms suggested
fitFinal <- fit31alt
summary(fitFinal)
# for own interest: check exponentiated coefficients and CIs
(OR_fitFinal <- round(exp(coef(fitFinal)), 2))
(CI_fitFinal <- round(exp(confint(fitFinal)), 2))
plot(CI_fitFinal)
boxplot(CI_fitFinal)
require(plotrix)
plotCI(fitFinal$coefficients,CI_fitFinal[,1],CI_fitFinal[,2])
plotCI(CI_fitFinal[,1],CI_fitFinal[,2])
?plotCI
plotCI(x=1:len(fitFinal$coef), y=fitFinal$coef,CI_fitFinal[,1],CI_fitFinal[,2])
plotCI(x=1:length(fitFinal$coef), y=fitFinal$coef,CI_fitFinal[,1],CI_fitFinal[,2])
### data.frame for loglinear model
(xtab4 <- with(nels, table(sesmed, fa.educ, fa.wrk, region)))
qq4 <- as.data.frame(xtab4, responseName = "N")
fitLoglin <- glm(N ~ sesmed*fa.educ*region + sesmed*fa.wrk + fa.educ*region*fa.wrk, family = poisson, data = qq4)
summary(fitLoglin)
OR_fitLoglin <- round(exp(coef(fitLoglin)), 2)
OR_fitLoglin_relevant <- OR_fitLoglin[grep("^sesmedOver med.:.+$",names(OR_fitLoglin))]
# ! need to compare e.g. fa.educCollege:regionWest with sesmedOver med.:fa.educCollege:regionWest
OR_fitLoglin_relevant
OR_fitFinal[-1]
# we see that the estimated exponentiated coefficients are the same
(xtab3 <- with(nels, table(ses, fa.educ, fa.wrk, region)))
qq3 <- as.data.frame(xtab3, responseName = "N")
### Logit model (saturated)
fit3 <- glm(sesmed ~ (fa.educ + fa.wrk + region)^3, family = binomial, data = nels)
drop1(fit3, test = "LRT")
### Logit model, no three-way interaction
fit3alt <- glm(sesmed ~ (fa.educ + fa.wrk + region)^2, family = binomial, data = nels)
drop1(fit3alt, test = "LRT") ##drop fa.wrk:region first
### Start with fit3alt and try to simplify it
### --> fit30alt
fit30alt <- glm(sesmed ~ (fa.educ + region)^2 + fa.educ:fa.wrk + fa.wrk, family = binomial, data = nels)
anova(fit3alt, fit30alt, test = "LRT") # not significantly worse
drop1(fit30alt, test = "LRT")
fit31alt <- glm(sesmed ~ (fa.educ + region)^2 + fa.wrk, family = binomial, data = nels)
anova(fit3alt, fit31alt, test = "LRT") # not significantly worse
anova(fit30alt, fit31alt, test ="LRT") # same, but on edge, so pay attention
drop1(fit31alt, test = "LRT") # no further dropping of interaction terms suggested
summary(fitFinal)
# for own interest: check exponentiated coefficients and CIs
(OR_fitFinal <- round(exp(coef(fitFinal)), 2))
(CI_fitFinal <- round(exp(confint(fitFinal)), 2))
### data.frame for loglinear model
(xtab4 <- with(nels, table(sesmed, fa.educ, fa.wrk, region)))
qq4 <- as.data.frame(xtab4, responseName = "N")
##### *************************************************************************************** #####
CI_fitFinal <- as.data.frame(CI_fitFinal)
print(xtable(CI_fitFinal, digits = c(0, 1, 1, 1,1)), floating = FALSE)
print(xtable(CI_fitFinal, digits = c(0, 1, 1)), floating = FALSE)
fitLoglin <- glm(N ~ sesmed*fa.educ*region + sesmed*fa.wrk + fa.educ*region*fa.wrk, family = poisson, data = qq4)
summary(fitLoglin)
OR_fitLoglin <- round(exp(coef(fitLoglin)), 2)
OR_fitLoglin_relevant <- OR_fitLoglin[grep("^sesmedOver med.:.+$",names(OR_fitLoglin))]
# ! need to compare e.g. fa.educCollege:regionWest with sesmedOver med.:fa.educCollege:regionWest
OR_fitLoglin_relevant
OR_fitFinal[-1]
Odds_ratio_question34 = cbind(exp(fitFinal$coef[-1],OR_fitFinal[-1])
Odds_ratio_question34 = Odds_ratio_question34
Odds_ratio_question34 = as.data.frame(Odds_ratio_question34)
Odds_ratio_question34 = cbind(exp(fitFinal$coef[-1],OR_fitFinal[-1])
Odds_ratio_question34 = cbind(exp(fitFinal$coef[-1]),OR_fitFinal[-1])
Odds_ratio_question34 = cbind(exp(fitFinal$coef[-1]),OR_fitFinal[-1])
Odds_ratio_question34 = as.data.frame(Odds_ratio_question34)
View(Odds_ratio_question34)
Odds_ratio_question34 = cbind(round(exp(fitFinal$coef[-1]),2),OR_fitFinal[-1])
Odds_ratio_question34 = as.data.frame(Odds_ratio_question34)
View(Odds_ratio_question34)
colnames(Odds_ratio_question34) <- c("Question 3", "Question 4")
View(Odds_ratio_question34)
print(xtable(Odds_ratio_question34, digits = c(0, 1, 1)), floating = FALSE)
### Table
xtab5 <- with(nels, table(sesmed, parents, foreign, fa.educ, mo.educ, region,
fa.wrk, mo.wrk))
dim(xtab5)
prod(dim(xtab5))       ## 1152
### Marginal counts
### Some exploration (do we have at least marginally reasonable counts?)
margin.table(xtab5, margin = 1)
margin.table(xtab5, margin = 2)
margin.table(xtab5, margin = 3)
margin.table(xtab5, margin = 4)
margin.table(xtab5, margin = 5)
margin.table(xtab5, margin = 6)
margin.table(xtab5, margin = 7)
margin.table(xtab5, margin = 8)
### Some pairwise dependencies
with(nels, table(fa.wrk, mo.wrk))
prop.table(with(nels, table(fa.wrk, mo.wrk)), margin = 2)
chisq.test(with(nels, table(fa.wrk, mo.wrk)))
#
with(nels, table(fa.educ, mo.educ))
prop.table(with(nels, table(fa.educ, mo.educ)), margin = 2)
chisq.test(with(nels, table(fa.educ, mo.educ)))
#
with(nels, table(mo.wrk, mo.educ))
prop.table(with(nels, table(mo.wrk, mo.educ)), margin = 2)
chisq.test(with(nels, table(mo.wrk, mo.educ)))
### Three-way interaction model
qq5 <- as.data.frame(xtab5, responseName = "N")
m1 <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^3, family = poisson, data = qq5)
gof(m1)
?gof
install.packages("aods3")
library(aods3)
gof(m1)
### Two-way interaction model
mTwoWay <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^2, family = poisson, data = qq5)
#
gof(mTwoWay)
anova(mTwoWay, m1, test = "LR")        ### Some three-way interactions needed...
### Usual model building while starting from the three-way interaction model
D1 <- drop1(m1, test = "LR")            ## takes some time, be patient...
print(D1)
### Candidates to remove in the first step
class(D1)
attr(D1, "row.names")
D1[["Pr(>Chi)"]]
(Drop1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] > 0.5])
paste(Drop1, collapse = "-")
paste(". ~ . - ", paste(Drop1, collapse = "-"))
m2 <- update(m1, paste(". ~ . - ", paste(Drop1, collapse = "-")))
gof(m2)
anova(m2, m1, test = "LRT")
### If we really want to be sure that nothing "important" has been removed,
### standard back-check can be performed (rather automatically) by adding
### each of removed terms back to the model
(Return1  <- add1(m2, scope = m1, test = "LRT"))
min(Return1[, "Pr(>Chi)"], na.rm = TRUE)
### Alternative: specify those factors which should be kept in the model
(Keep1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] < 0.2])
m3 <- update(mTwoWay, paste(". ~ . + ", paste(Keep1, collapse = "+")))
gof(m3)
anova(m3, m1, test = "LRT")
### Table
xtab5 <- with(nels, table(sesmed, parents, foreign, fa.educ, mo.educ, region,
fa.wrk, mo.wrk))
dim(xtab5)
### Marginal counts
### Some exploration (do we have at least marginally reasonable counts?)
margin.table(xtab5, margin = 1)
margin.table(xtab5, margin = 2)
margin.table(xtab5, margin = 3)
margin.table(xtab5, margin = 4)
margin.table(xtab5, margin = 5)
margin.table(xtab5, margin = 6)
margin.table(xtab5, margin = 7)
margin.table(xtab5, margin = 8)
### Some pairwise dependencies
with(nels, table(fa.wrk, mo.wrk))
prop.table(with(nels, table(fa.wrk, mo.wrk)), margin = 2)
chisq.test(with(nels, table(fa.wrk, mo.wrk)))
#
with(nels, table(fa.educ, mo.educ))
prop.table(with(nels, table(fa.educ, mo.educ)), margin = 2)
chisq.test(with(nels, table(fa.educ, mo.educ)))
#
with(nels, table(mo.wrk, mo.educ))
prop.table(with(nels, table(mo.wrk, mo.educ)), margin = 2)
chisq.test(with(nels, table(mo.wrk, mo.educ)))
### Three-way interaction model
qq5 <- as.data.frame(xtab5, responseName = "N")
View(qq5)
m1 <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^3, family = poisson, data = qq5)
summary(m1)
### Two-way interaction model
mTwoWay <- glm(N ~ (sesmed + parents + foreign + fa.educ + mo.educ + region +
fa.wrk + mo.wrk)^2, family = poisson, data = qq5)
anova(mTwoWay, m1, test = "LR")        ### Some three-way interactions needed...
### Usual model building while starting from the three-way interaction model
D1 <- drop1(m1, test = "LR")            ## takes some time, be patient...
print(D1)
### Candidates to remove in the first step
class(D1)
attr(D1, "row.names")
D1[["Pr(>Chi)"]]
(Drop1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] > 0.7])
paste(Drop1, collapse = "-")
paste(". ~ . - ", paste(Drop1, collapse = "-"))
m2 <- update(m1, paste(". ~ . - ", paste(Drop1, collapse = "-")))
summary(m2)
(Drop1 <- attr(D1, "row.names")[-1][D1[["Pr(>Chi)"]][-1] > 0.3])
paste(Drop1, collapse = "-")
paste(". ~ . - ", paste(Drop1, collapse = "-"))
m2 <- update(m1, paste(". ~ . - ", paste(Drop1, collapse = "-")))
summary(m2)
anova(m2, m1, test = "LRT")
### Basic exploration
### ++++++++++++++++++++++++++++++++++++++++++++
with(nels, table(region)) # seems alright
### (ii) ses vs. fa.educ vs. region
### ++++++++++++++++++++++++++++++++++++++++++++
(xtab2 <- with(nels, table(ses, fa.educ, region)))
round(100*prop.table(xtab2, margin = 3), 1)
qq2 <- as.data.frame(xtab2, responseName = "N")
### Saturated model
fit2 <- glm(N ~ (ses + fa.educ + region)^3, family = poisson, data = qq2)
summary(fit2)
### Deviance test on the three-way interaction
drop1(fit2, test = "LRT")
# Can't drop the three-way-interaction term as it is significant
# continue to look into Odds Ratios
### Some odds ratios
### Odds ratios (odds on higher ses compared to ses = 1) when comparing higher
### educations with elementary ones
### = odds ratios (odds on higher education compared to elementary one) when
###   comparing higher ses with ses = 1
### --> conditional ones (given region)
## Region = Northeast (reference)
## ------------------------------
(lorNE <- c(be2[grep("^ses[0-9]:fa.educHigh$",    names(be2))],
be2[grep("^ses[0-9]:fa.educCollege$", names(be2))]))
(orNE <- exp(lorNE))
(orNE <- matrix(round(orNE, 2), nrow = 3))
rownames(orNE) <- paste("ses", 2:4, sep = "")
colnames(orNE) <- paste("educ", c("High", "College"))
print(orNE)
coef <- coef(m2)
summary(m2)
### mod.educ = Elementary
coef[paste("ses", 2:4, sep = "")]
### ODDS on better ses (compared to ses = 1)
### given father's education
### ----------------------------------------
#
### fa.educ = Elementary
be1[paste("ses", 2:4, sep = "")]
fit0 <- glm(N ~ ses + fa.educ, family = poisson, data = qq1)
summary(fit0)
### Deviance (likelihood-ratio) test of independence
anova(fit0, fit1, test = "LRT")
(be1 <- coef(fit1))
coef_exp_1 <- round(exp(be1),2)[-1]
coef_exp_1 # exponentiated coefficients
### ODDS on better ses (compared to ses = 1)
### given father's education
### ----------------------------------------
#
### fa.educ = Elementary
be1[paste("ses", 2:4, sep = "")]
(be1 <- coef(fit1))
### Saturated model
fit1 <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
### Data frame for loglinear modelling
qq1 <- as.data.frame(xtab1, responseName = "N")
### Contingency table
(xtab1 <- with(nels, table(ses, fa.educ)))
(ptab1 <- round(100*prop.table(xtab1, margin = 2), 2)) # fractions indicate large differences
### Plot for simple relation
plot(ses ~ fa.educ, data = nels, col = rainbow_hcl(4),
main = "SES by father's education")
### LaTeX-Code for table
print(xtable(ptab1, digits = c(0, 1, 1, 1)), floating = FALSE)
### Data frame for loglinear modelling
qq1 <- as.data.frame(xtab1, responseName = "N")
print(qq1)
### Saturated model
fit1 <- glm(N ~ (ses + fa.educ)^2, family = poisson, data = qq1)
summary(fit1)
### Independence model
fit0 <- glm(N ~ ses + fa.educ, family = poisson, data = qq1)
summary(fit0)
### Deviance (likelihood-ratio) test of independence
anova(fit0, fit1, test = "LRT")
(be1 <- coef(fit1))
coef_exp_1 <- round(exp(be1),2)[-1]
coef_exp_1 # exponentiated coefficients
### ODDS on better ses (compared to ses = 1)
### given father's education
### ----------------------------------------
#
### fa.educ = Elementary
be1[paste("ses", 2:4, sep = "")]
paste("ses", 2:4, sep = "")
exp(be1[paste("ses", 2:4, sep = "")
exp(be1[paste("ses", 2:4, sep = "")]
exp(be1[paste("ses", 2:4, sep = "")]
sd
exp(be1[paste("ses", 2:4, sep = "")])
coef <- coef(m2)
(coef <- coef(m2))
(coef <- round(coef(m2),2))
### region
coef[paste("region", 2:4, sep = "")]
(oddsElem <- round(exp(coef[paste("region", 2:4, sep = "")]),2))
### region
coef[paste("region", c("MidWest","South","West"), sep = "")]
### region
coef[paste("region", c("Midwest","South","West"), sep = "")]
(oddsEst <- round(exp(coef[paste("region",  c("Midwest","South","West"), sep = "")]),2))
coef[paste("region", c("Midwest","South","West"), ":fa.educHigh", sep = "")]
coef[paste("region", c("Midwest","South","West"), ":fa.wrkNot_working", sep = "")]
(oddsHigh <- round(exp(coef[paste("ses", 2:4, sep = "")] +
coef[paste("region", c("Midwest","South","West"), ":fa.wrkNot_working", sep = "")],2))
d
coef[paste("region", c("Midwest","South","West"), ":fa.wrkNot_working", sep = "")],2)
coef[paste("region", c("Midwest","South","West"), ":fa.wrkNot_working", sep = "")]),2)
(oddsHigh <- round(exp(coef[paste("ses", 2:4, sep = "")] +
coef[paste("region", c("Midwest","South","West"), ":fa.wrkNot_working", sep = "")]),2))
#
### region = Midwest
coef[paste("mo.educCollege", ":region", c("Midwest","South","West"), sep = "")]
coef[paste("region", c("Midwest","South","West"), sep = "")]
